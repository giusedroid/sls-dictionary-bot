deploy: &deploy
  steps:
    - checkout
    - restore_cache:
        keys:
        - v1-dependencies-
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-
    - run:
        name: Install AWS cli
        command: |
          sudo apt install python-pip python-dev && pip install awscli
    - run:
        name: Deploy application
        command: sls deploy --stage $(DEPLOY_ENV)
    - persist_to_workspace:
        root: .
        paths:
          - serverless-info.json
    - run:
        name: Deploy seed file
        command: aws s3 cp ./assets/data/data.json s3://$(S3_DEFINITION_BUCKET_NAME)
integration: &integration
  steps:
    - checkout
    - attach_workspace:
        at: .
    - restore_cache:
        keys:
        - v1-dependencies-
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-
    - run: 
        name: Run tests
        command: npm run test:e2e
version: 2
jobs:
  unit:
    docker:
      - image: circleci/node:8.10

    working_directory: ~/repo

    steps:
      - checkout
      - run:
          name: Install Serverless CLI and dependencies
          command: |
            sudo npm i -g serverless
            npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-
      - run: 
          name: Run tests
          command: npm test
  build-unstable:
    docker:
      - image: circleci/node:8.10
    working_directory: ~/repo
    environment:
      DEPLOY_ENV: unstable
      DYNAMODB_TABLE_NAME: unstable-dictbot-table-cr
      S3_DEFINITION_BUCKET_NAME: unstable-dictbot-bucket-cr
    <<: *deploy
  integration-unstable:
    docker:
      - image: circleci/node:8.10

    working_directory: ~/repo
    <<: *integration
  integration-stable:
    docker:
      - image: circleci/node:8.10

    working_directory: ~/repo
    <<: *integration 
  build-stable:
    docker:
      - image: circleci/node:8.10

    working_directory: ~/repo
    environment:
      DEPLOY_ENV: stable
      DYNAMODB_TABLE_NAME: stable-dictbot-table-cr
      S3_DEFINITION_BUCKET_NAME: stable-dictbot-bucket-cr
    <<: *deploy
  
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - unit
      - build-unstable:
          requires:
            - unit
      - integration-unstable:
          requires:
            - build-unstable
      - hold-stable:
          type: approval
          requires:
            - integration-unstable
          filters:
            branches:
              only: master
      - build-stable:
          requires:
            - hold-stable
          filters:
            branches:
              only: master
      - integration-stable:
          requires:
            - build-stable
          filters:
            branches:
              only: master
